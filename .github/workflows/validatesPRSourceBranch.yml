name: Validate PR Source Branch
on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  validate-source:
    runs-on: ubuntu-latest
    steps:
      - name: Check event type and actor
        id: check-context
        run: |
          EVENT_NAME="${{ github.event_name }}"
          ACTOR="${{ github.actor }}"
          SOURCE_BRANCH="${{ github.head_ref }}"
          echo "Event: $EVENT_NAME"
          echo "Actor: $ACTOR"
          echo "Source branch: $SOURCE_BRANCH"
          
          # Check if actor is a bot first
          if [[ "$ACTOR" == "github-actions[bot]" ]] || [[ "$ACTOR" == "dependabot[bot]" ]] || [[ "$ACTOR" == *"[bot]" ]]; then
            echo "✅ Bot detected - allowing action from: $ACTOR"
            echo "bypass=true" >> $GITHUB_OUTPUT
            echo "is_push=false" >> $GITHUB_OUTPUT
          # For push events from humans, block them
          elif [[ "$EVENT_NAME" == "push" ]]; then
            echo "❌ Human push detected - blocking direct push to main/master from: $ACTOR"
            echo "bypass=false" >> $GITHUB_OUTPUT
            echo "is_push=true" >> $GITHUB_OUTPUT
            exit 1
          # For pull requests from main branch, allow
          elif [[ "$SOURCE_BRANCH" == "main" ]]; then
            echo "✅ Allowing PR from main branch"
            echo "bypass=true" >> $GITHUB_OUTPUT
            echo "is_push=false" >> $GITHUB_OUTPUT
          else
            echo "bypass=false" >> $GITHUB_OUTPUT
            echo "is_push=false" >> $GITHUB_OUTPUT
          fi

      - name: Check source branch (PR only)
        id: validate
        if: steps.check-context.outputs.bypass != 'true' && steps.check-context.outputs.is_push != 'true'
        run: |
          SOURCE_BRANCH="${{ github.head_ref }}"
          echo "Source branch: $SOURCE_BRANCH"
          
          if [[ "$SOURCE_BRANCH" == "develop" ]] || [[ "$SOURCE_BRANCH" == hotfix* ]]; then
            echo "✅ Valid source branch: $SOURCE_BRANCH"
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "❌ Invalid source branch: $SOURCE_BRANCH"
            echo "PRs to main must come from 'develop' or branches starting with 'hotfix'"
            echo "status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
      
      - name: Comment on PR (if validation fails)
        if: failure() && steps.check-context.outputs.bypass != 'true' && steps.check-context.outputs.is_push != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Branch Validation Failed**\n\nThis PR cannot be merged because it originates from an invalid source branch.\n\n**Allowed source branches:**\n- `develop`\n- `hotfix/*`\n\n**Current source branch:** `${{ github.head_ref }}`\n\nPlease create your PR from a valid source branch.'
            })